import { Bot, InlineKeyboard, GrammyError, HttpError } from "grammy";
import dotenv from 'dotenv';
dotenv.config();

const bot = new Bot(process.env.TELEGRAM_BOT_TOKEN);

class TelegramService {
    async sendBookingNotification(trainer, client, date, time) {
        // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞
        const trainerMessage = `üèãÔ∏è *–ù–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞!*\n\n`
            + `üë§ –ö–ª–∏–µ–Ω—Ç: ${client.first_name} ${client.nickname ? client.nickname : ''}\n`
            + `üìÖ –î–∞—Ç–∞: ${date}\n`
            + `‚è∞ –í—Ä–µ–º—è: ${time}`;
        
        // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
        const clientMessage = `‚úÖ *–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!*\n\n`
            + `üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä: ${trainer.first_name}\n`
            + `üìÖ –î–∞—Ç–∞: ${date}\n`
            + `‚è∞ –í—Ä–µ–º—è: ${time}`;

        try {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º Markdown
            await bot.api.sendMessage(trainer.tgId, trainerMessage, {
                parse_mode: "Markdown"
            });
            await bot.api.sendMessage(client.tgId, clientMessage, {
                parse_mode: "Markdown"
            });
        } catch (error) {
            console.error('Error sending Telegram notification:', error);
        }
    }

    async sendCancelNotification(trainer, client, date, time) {
        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–º–µ–Ω–µ
        const trainerMessage = `‚ùå *–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!*\n\n`
            + `üë§ –ö–ª–∏–µ–Ω—Ç: ${client.first_name} ${client.nickname ? client.nickname : ''}\n`
            + `üìÖ –î–∞—Ç–∞: ${date}\n`
            + `‚è∞ –í—Ä–µ–º—è: ${time}`;
            
        const clientMessage = `‚ùå *–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!*\n\n`
            + `üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä: ${trainer.first_name}\n`
            + `üìÖ –î–∞—Ç–∞: ${date}\n`
            + `‚è∞ –í—Ä–µ–º—è: ${time}`;

        try {
            await bot.api.sendMessage(trainer.tgId, trainerMessage, {
                parse_mode: "Markdown"
            });
            await bot.api.sendMessage(client.tgId, clientMessage, {
                parse_mode: "Markdown"
            });
        } catch (error) {
            console.error('Error sending cancel notification:', error);
        }
    }
}

export default new TelegramService(); 